name: Test and Deploy to Staging

on:
  push:
    branches: ["staging"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Create .env file from secret
        run: echo '${{ secrets.ENV_STAGING_FILE }}' > .env

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile.staging
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            set -e

            echo "Pulling latest image..."
            docker pull ghcr.io/${{ github.repository }}:staging

            echo "Stopping and removing old container if exists..."
            docker stop super-app-staging || true
            docker rm super-app-staging || true

            echo "Starting new container..."
            cd /home/adm-sman1/superapp
            docker run -d --name super-app-staging -p 8000:8000 ghcr.io/${{ github.repository }}:staging

            docker image prune -f

            echo "Deployment complete."
